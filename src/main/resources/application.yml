spring:
  profiles:
    active: dev
  jackson:
    time-zone: Asia/Seoul

---
# 개발 환경 (H2 데이터베이스)
spring:
  config:
    activate:
      on-profile: dev
  
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    defer-datasource-initialization: true
  
  sql:
    init:
      mode: always
      data-locations: classpath:db/data.sql

  jackson:
    time-zone: Asia/Seoul
    serialization:
      fail-on-empty-beans: false
    properties:
      hibernate:
        enable_lazy_load_no_trans: true

server:
  port: 8080

logging:
  level:
    com.cctv.controlcenter: DEBUG
    org.springframework.web: DEBUG

---
# Docker/운영 환경 (PostgreSQL)
spring:
  config:
    activate:
      on-profile: docker
  
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/cctv_db}
    username: ${SPRING_DATASOURCE_USERNAME:cctv_user}
    password: ${SPRING_DATASOURCE_PASSWORD:cctv_password}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
  
  sql:
    init:
      mode: always
      data-locations: classpath:db/data.sql
      continue-on-error: true

  jackson:
    time-zone: Asia/Seoul
    serialization:
      fail-on-empty-beans: false
    properties:
      hibernate:
        enable_lazy_load_no_trans: true

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.cctv.controlcenter: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE